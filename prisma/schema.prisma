// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CoverageTypes {
  CITY
  STATE
  COUNTRY
}

enum NewsScore {
  IRRELEVANT
  NORMAL
  IMPORTANT
  URGENT 
}

enum SexType {
  MALE
  FEMALE
}

enum Status {
  ACTIVE
  INACTIVE
  DISABLED
}

enum Role {
  MAYOR
  ALDERMAN
}

model User {
  id String @unique @default(uuid())
  name String
  email String @unique
  social_name String
  password_hash String
  cpfCnpj String @unique
  birth_date DateTime
  paymentId String
  mobilePhone String
  sex SexType @default(MALE)
  signature UserPlan[]
}

model SignaturePlan {
  id String @unique @default(uuid())
  name String 
  pixValue Float
  creditValue Float
  amount_of_monitoring Int
  duration Int @default(12)
  userPlan UserPlan[]
}

model UserPlan {
  id String @unique @default(uuid())
  user_id String
  plan_id String
  expires_in DateTime
  status Status @default(INACTIVE)
  plan SignaturePlan @relation(references: [id], fields: [plan_id])
  user User @relation(references: [id], fields: [user_id])
}

model PoliticianProfile {
  id String @unique @default(uuid())
  social_name String
  full_name String
  role Role @default(MAYOR)
  youtube String?
  tiktok String?
  facebook String?

  city_id String
  political_group_id String
  city City  @relation(references: [id], fields: [city_id])
  politicalGroup PolicalGroup @relation(references: [id], fields: [political_group_id])

  news NewsUsers[]
  ticktokData TicktokBaseData[]
  twitterData TwitterBaseData[]
  instagramPosts InstagramPost[]
  facebookData FacebookBaseData[]
  instagramData InstagramBaseData[]
  youtubeBaseData YoutubeBaseData[]
  instagramMention InstagramMention[]
  youtubeVideoData YoutubeVideoData[]
}

model InstagramBaseData {
  id String @unique @default(uuid())
  followers Int
  follows Int
  posts_count Int
  profilePicture String
  reels_count Int
  business Boolean
  fullName String
  verified Boolean
  biography String
  url String
  start_of_period DateTime
  end_of_period DateTime
  created_at DateTime @default(now())
  politician_id String
  politician PoliticianProfile @relation(references: [id], fields: [politician_id])
}

model TicktokBaseData {
  id String @unique @default(uuid())
  followers Int
  posts_count Int
  posts_comments_count Int
  posts_likes_count Int
  start_of_period DateTime
  end_of_period DateTime
  created_at DateTime @default(now())
  politician_id String
  politician PoliticianProfile @relation(references: [id], fields: [politician_id])
}

model TwitterBaseData {
  id String @unique @default(uuid())
  followers Int
  posts_count Int
  posts_comments_count Int
  posts_likes_count Int
  retweet_count Int
  favorite_count Int
  start_of_period DateTime
  end_of_period DateTime
  created_at DateTime @default(now())
  politician_id String
  politician PoliticianProfile @relation(references: [id], fields: [politician_id])
}

model YoutubeBaseData {
  id String @unique @default(uuid())
  channel_name String
  channel_total_videos Int
  channel_total_subs Int
  date DateTime
  politician_id String
  politician PoliticianProfile @relation(references: [id], fields: [politician_id])
}

model YoutubeVideoData {
  id String @unique @default(uuid())
  title String
  url String
  duration String
  viewCount Int
  commentsCount Int
  likes Int
  date DateTime
  description String
  imgUrl String
  politician_id String
  politician PoliticianProfile @relation(references: [id], fields: [politician_id])
  created_at DateTime @default(now())
}

model FacebookBaseData {
  id String @unique @default(uuid())
  likes_count Int
  followers_count Int
  start_of_period DateTime
  end_of_period DateTime
  created_at DateTime @default(now())
  politician_id String
  politician PoliticianProfile @relation(references: [id], fields: [politician_id])
}

model PolicalGroup {
  id String @unique @default(uuid())
  name String
  acronym String
  number Int
  instagram String?
  ticktok String?
  youtube String?
  facebook String?
  twitter String?
  president String
  politicians PoliticianProfile[]
}

model PolicalPosition {
  id String @unique @default(uuid())
  name String
  coverage CoverageTypes @default(CITY)
}

model InstagramPost {
  id String @unique @default(uuid())
  postUrl String
  description String
  commentCount Int
  likeCount Int
  pubDate DateTime
  viewCount Int
  playCount Int
  username String
  imgUrl String
  postId String
  politician_id String
  politician PoliticianProfile @relation(references: [id], fields: [politician_id])
  created_at DateTime @default(now())
  comments InstagramPostComment[]
}

model InstagramPostComment {
  id String @unique @default(uuid())
  text String
  ownerUsername String
  ownerProfilePicUrl String
  timestamp DateTime
  likeCount Int
  post_id String
  post InstagramPost @relation(references: [id], fields: [post_id])
}

model InstagramMention {
  id String @unique @default(uuid())
  postUrl String
  description String
  commentCount Int
  likeCount Int
  pubDate DateTime
  viewCount Int
  playCount Int
  username String
  imgUrl String
  postId String
  ownerFullName String
  ownerUsername String
  politician_id String
  politician PoliticianProfile @relation(references: [id], fields: [politician_id])
  comments InstagramMentionComment[]
}

model InstagramMentionComment {
  id String @unique @default(uuid())
  text String
  ownerUsername String
  ownerProfilePicUrl String
  timestamp DateTime
  likeCount Int
  post_id String
  post InstagramMention @relation(references: [id], fields: [post_id])
}

model Website {
  id String @unique @default(uuid())
  name String
  url String
  cities WebsiteCity[]
}

model WebsiteCity {
  id String @unique @default(uuid())
  website_id String
  city_id String
  city City @relation(references: [id], fields: [city_id])
  website Website @relation(references: [id], fields: [website_id])

}

model City {
  id String @unique @default(uuid())
  name String
  state String
  politician PoliticianProfile[]
  websites WebsiteCity[]
  IBGEData CityIBGEData[]
  electorate CityElectorateData[]
  pollingPlace CityPollingPlace[]
}

model CityIBGEData {
  id String @unique @default(uuid())
  city_id String
  total Int @default(0)
  total_zero_to_four Int @default(0)
  total_five_to_nine Int @default(0)
  total_ten_to_fourteen Int @default(0)
  total_fifteen_to_nineteen Int @default(0)
  total_twenty_to_twenty_four Int @default(0)
  total_twenty_five_to_twenty_nine Int @default(0)
  total_thirty_to_thirty_four Int @default(0)
  total_thirty_five_to_thirty_nine Int @default(0)
  total_forty_to_forty_four Int @default(0)
  total_forty_five_to_forty_nine Int @default(0)
  total_fifty_to_fifty_four Int @default(0)
  total_fifty_five_to_fifty_nine Int @default(0)
  total_sixty_to_sixty_four Int @default(0)
  total_sixty_five_to_sixty_nine Int @default(0)
  total_seventy_to_seventy_four Int @default(0)
  total_seventy_five_to_seventy_nine Int @default(0)
  total_eighty_to_eighty_four Int @default(0)
  total_eighty_five_to_eighty_nine Int @default(0)
  total_ninety_to_ninety_four Int @default(0)
  total_ninety_five_to_ninety_nine Int @default(0)
  total_hundred_and_up Int @default(0)
  male_total Int @default(0)
  male_zero_to_four Int @default(0)
  male_five_to_nine Int @default(0)
  male_ten_to_fourteen Int @default(0)
  male_fifteen_to_nineteen Int @default(0)
  male_twenty_to_twenty_four Int @default(0)
  male_twenty_five_to_twenty_nine Int @default(0)
  male_thirty_to_thirty_four Int @default(0)
  male_thirty_five_to_thirty_nine Int @default(0)
  male_forty_to_forty_four Int @default(0)
  male_forty_five_to_forty_nine Int @default(0)
  male_fifty_to_fifty_four Int @default(0)
  male_fifty_five_to_fifty_nine Int @default(0)
  male_sixty_to_sixty_four Int @default(0)
  male_sixty_five_to_sixty_nine Int @default(0)
  male_seventy_to_seventy_four Int @default(0)
  male_seventy_five_to_seventy_nine Int @default(0)
  male_eighty_to_eighty_four Int @default(0)
  male_eighty_five_to_eighty_nine Int @default(0)
  male_ninety_to_ninety_four Int @default(0)
  male_ninety_five_to_ninety_nine Int @default(0)
  male_hundred_and_up Int @default(0)
  female_total Int @default(0)
  female_zero_to_four Int @default(0)
  female_five_to_nine Int @default(0)
  female_ten_to_fourteen Int @default(0)
  female_fifteen_to_nineteen Int @default(0)
  female_twenty_to_twenty_four Int @default(0)
  female_twenty_five_to_twenty_nine Int @default(0)
  female_thirty_to_thirty_four Int @default(0)
  female_thirty_five_to_thirty_nine Int @default(0)
  female_forty_to_forty_four Int @default(0)
  female_forty_five_to_forty_nine Int @default(0)
  female_fifty_to_fifty_four Int @default(0)
  female_fifty_five_to_fifty_nine Int @default(0)
  female_sixty_to_sixty_four Int @default(0)
  female_sixty_five_to_sixty_nine Int @default(0)
  female_seventy_to_seventy_four Int @default(0)
  female_seventy_five_to_seventy_nine Int @default(0)
  female_eighty_to_eighty_four Int @default(0)
  female_eighty_five_to_eighty_nine Int @default(0)
  female_ninety_to_ninety_four Int @default(0)
  female_ninety_five_to_ninety_nine Int @default(0)
  female_hundred_and_up Int @default(0)
  city City @relation(references: [id], fields: [city_id])
}

model CityPollingPlace {
  id String @unique @default(uuid())
  number String
  name String
  quantity Int
  city_id String
  city City @relation(references: [id], fields: [city_id])
}

model CityElectorateData {
  id String @unique @default(uuid())
  illiterate Int @default(0)
  complete_primary_education Int @default(0) 
  incomplete_primary_education Int @default(0) 
  complete_high_school Int @default(0) 
  incomplete_high_school Int @default(0) 
  reads_and_writes Int @default(0) 
  not_informed Int @default(0) 
  complete_higher_education Int @default(0) 
  incomplete_higher_education Int @default(0) 
  hundred_years_or_more Int @default(0) 
  sixteen_years Int @default(0) 
  seventeen_years Int @default(0)
  eighteen_years Int @default(0)
  nineteen_years Int @default(0)
  twenty_years Int @default(0)
  twenty_one_to_twenty_four_years Int @default(0)
  twenty_five_to_twenty_nine_years Int @default(0)
  thirty_to_thirty_four_years Int @default(0)
  thirty_five_to_thirty_nine_years Int @default(0)
  forty_to_forty_four_years Int @default(0)
  forty_five_to_forty_nine_years Int @default(0)
  fifty_to_fifty_four_years Int @default(0)
  fifty_five_to_fifty_nine_years Int @default(0)
  sixty_to_sixty_four_years Int @default(0)
  sixty_five_to_sixty_nine_years Int @default(0)
  seventy_to_seventy_four_years Int @default(0)
  seventy_five_to_seventy_nine_years Int @default(0)
  eighty_to_eighty_four_years Int @default(0)
  eighty_five_to_eighty_nine_years Int @default(0)
  ninety_to_ninety_four_years Int @default(0)
  ninety_five_to_ninety_nine_years Int @default(0) 
  invalid Int @default(0) 
  female Int @default(0)
  male Int @default(0)
  electorate Int @default(0)
  with_biometry Int @default(0)
  with_disability Int @default(0)
  city_id String 
  city City @relation(references: [id], fields: [city_id])
}

model News {
  id String @unique @default(uuid())
  last_update DateTime
  title String
  url String
  score NewsScore @default(IRRELEVANT)
  users NewsUsers[]
}

model NewsUsers {
  id String @unique @default(uuid())
  news_id String
  politician_id String
  politician PoliticianProfile @relation(references: [id], fields: [politician_id])
  news News @relation(references: [id], fields: [news_id])
}

model MetaAdvertisingLib {
  id String @unique @default(uuid())
  user_id String
  impressions_lower_bound String
  inpressions_upper_bound String
  spend_lower_bound String
  spend_upper_bound String
  currency String
  page_name String
  bylines String
  ad_snapshot_url String
  ad_delivery_start_time DateTime
  ad_delivery_stop_time DateTime
  ad_creation_time DateTime
  deliveryByRegion MetaAdvertisingLibDeliveryByRegion[]
  demographicDistribution MetaAdvertisingLibDemographicDistribution[]
}

model MetaAdvertisingLibDemographicDistribution {
  id String @unique @default(uuid())
  percentage String
  age String
  gender String
  advertising_id String
  advertising MetaAdvertisingLib @relation(references: [id], fields: [advertising_id])
}

model MetaAdvertisingLibDeliveryByRegion {
  id String @unique @default(uuid())
  percentage String
  region String
  advertising_id String
  advertising MetaAdvertisingLib @relation(references: [id], fields: [advertising_id])
}
